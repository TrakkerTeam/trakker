<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="review">

    <select id="list" parameterType="hashMap" resultMap="reviewResultMap">
        SELECT *
        FROM (
        SELECT rn, review_num, title, content, review_date, k_name, l_num, mem_num, mem_nickname
        FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY r.review_num DESC) AS rn,
        r.review_num,r.title,r.content,r.review_date,
        l.k_name,
        l.l_num,
        m.mem_num,
        m.mem_nickname
        FROM review r
        JOIN local l ON r.l_num = l.l_num
        join member m
        on r.mem_num = m.mem_num
        )
        <if test='searchType.equals("title")'>
            WHERE title LIKE '%' || #{keyword} || '%'
        </if>
        <if test='searchType.equals("content")'>
            WHERE content LIKE '%' || #{keyword} || '%'
        </if>
        <if test='searchType.equals("mem_nickname")'>
            WHERE mem_nickname LIKE '%' || #{keyword} || '%'
        </if>
        )
        WHERE rn between ${(pageNum -1) * pageRowCount} +1 and ${(pageNum -1) * pageRowCount} + ${pageRowCount}
    </select>

    <select id="total" parameterType="hashMap" resultType="int">
        select count(*)
        from(SELECT r.review_num, r.title, r.content, m.mem_num, m.mem_nickname
             FROM review r
        join member m
        on r.mem_num = m.mem_num)
        WHERE 1=1
        <if test='searchType.equals("title")'>
            and title LIKE '%' || #{keyword} || '%'
        </if>
        <if test='searchType.equals("content")'>
            and content LIKE '%' || #{keyword} || '%'
        </if>
        <if test='searchType.equals("mem_nickname")'>
            and mem_nickname LIKE '%' || #{keyword} || '%'
        </if>
    </select>

    <insert id="insert">
        insert into review (review_num, mem_num, l_num, title, content)
        values (review_seq.nextval, #{mem_num}, #{l_num}, #{title}, #{content})
    </insert>

    <update id="count">
        update review
        set readcount = readcount + 1
        where review_num = #{review_num}
    </update>

    <select id="detail" resultMap="reviewResultMap">
        select r.review_num,
               r.title,
               r.content,
               r.review_date,
               r.readcount,
               r.edit_date,
               l.l_num,
               l.k_name,
               m.mem_num,
               m.mem_nickname
        from review r
                 join local l
                      on r.l_num = l.l_num
                 join member m
                      on r.mem_num = m.mem_num
        where review_num = #{review_num}
    </select>

    <select id="edit" resultMap="reviewResultMap">
        select r.review_num, r.title, r.content, r.review_date, l.k_name, l.l_num
        from review r
                 join local l
                      on r.l_num = l.l_num
        where review_num = #{review_num}
    </select>

    <update id="update">
        update review
        set l_num     = #{l_num},
            title     = #{title},
            content   = #{content},
            edit_date = sysdate
        where review_num = #{review_num}
    </update>

    <delete id="delete">
        delete
        from review
        where review_num = #{review_num}
    </delete>


    <resultMap id="reviewResultMap" type="review">
        <id property="review_num" column="review_num"/>
        <result property="mem_num" column="MEM_NUM"/>
        <result property="l_num" column="L_NUM"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="review_date" column="review_date"/>
        <result property="review_date" column="review_date"/>
        <result property="readcount" column="readcount"/>
        <result property="edit_date" column="edit_date"/>
        <collection property="member" ofType="member">
            <result property="mem_nickname" column="mem_nickname"/>
        </collection>
        <collection property="local" ofType="local">
            <result property="k_name" column="K_NAME"/>
        </collection>
    </resultMap>


    <!--    <resultMap id="imgResultMap" type="img">-->
    <!--        <id property="ref_num" column="REF_NUM"/>-->
    <!--        <result property="ref_img" column="REF_IMG"/>-->
    <!--    </resultMap>-->

    <!--    <resultMap id="ratingResultMap" type="rating">-->
    <!--        <id property="mem_num" column="MEM_NUM"/>-->
    <!--        <result property="t_num" column="T_NUM"/>-->
    <!--        <result property="review_num" column="review_num"/>-->
    <!--        <result property="star" column="star"/>-->
    <!--    </resultMap>-->

    <!--    <resultMap id="commentResultMap" type="comment">-->
    <!--        <id property="comment_num" column="comment_num"/>-->
    <!--        <id property="review_num" column="review_num"/>-->
    <!--        <id property="mem_num" column="MEM_NUM"/>-->
    <!--        <id property="l_num" column="L_NUM"/>-->
    <!--        <id property="comment_p" column="comment_p"/>-->
    <!--        <id property="content" column="content"/>-->
    <!--        <result property="com_date" column="com_date"/>-->
    <!--        <result property="com_delete" column="com_delete"/>-->
    <!--        <result property="com_delete" column="com_delete"/>-->
    <!--    </resultMap>-->

    <select id="getRatingAverage" resultType="double">
        select avg(rating)
        from rating g, review w
        where g.review_num =w.review_num and g.review_num=#{review_num}
    </select>

    <update id="insertRating">
        update rating
        set rating = #{rating}
        where review_num = #{review_num}
    </update>

    <insert id="ratingPost">
       insert into rating(review_num,rating) values(#{review_num},#{rating})
    </insert>

</mapper>
